@page "/"
@rendermode InteractiveServer

<link rel="stylesheet" href="Stamtrae.css" />
<link href="https://fonts.googleapis.com/css2?family=Crimson+Pro:wght@400;700&display=swap" rel="stylesheet">

<div class="TopBar">
    <div class="card text-white mb-3">
        <label class="TitleClass">
            Modificér dit stamtræ
        </label>

        <label class="MarriedClass">
            Har du en ægtefælle?
            <input type="checkbox" id="marriageField" @onchange="OnMarriedChanged" />
        </label>

        <label class="ChildrenClass">
            Hvor mange børn har du?
            <input type="number" id="childrenField" @onchange="OnKidsAmountChanged" />
        </label>

        <label class="WillClass">
            Tilføj andre arvinger
            <button class="FamilyBtn" @onclick="AddClick">
                Tilføj
            </button>
        </label>

    </div>
</div>



@if (Client.KidsAmount > 0 || Client.Married == true || extraFamily > 0)
{
    <div class="inheritance-tree">
        @if (Client.Married)
        {
            <div class="married-grid">
                <div class="inheritor-box">
                    <h5>Ægtefælle</h5>
                    <label>
                        <input type="text" class="nameTxt" @bind="HeirRepository.Instance.Spouse.Name" />
                        <label class="PercentageTxt" style="color:black">
                            <label>
                                Arvefordeling: @InheritanceCalc.CalculateForcedInheritancePercentageForMarried()% - @InheritanceCalc.CalculateInheritancePercentageForMarried()%
                            </label>
                            <br />
                            <label>
                                Arvebeløb: @InheritanceCalc.CalculateForcedInheritanceAmountForMarried() - @InheritanceCalc.CalculateInheritanceAmountForMarried()
                            </label>
                            
                            @{
                                HeirRepository.Instance.Spouse.ForcedInheritancePercentage = InheritanceCalc.CalculateForcedInheritancePercentageForMarried();
                            }
                        </label>
                    </label>
                </div>
            </div>
        }

        <div class="divider"></div>

        @for (int i = 0; i < HeirRepository.Instance.ReturnKids().Count; i++)
        {
            var heir = HeirRepository.Instance.ReturnKids()[i];
            heir.InheritancePercentage = InheritanceCalc.CalculateInheritancePercentageForKid();

            <div class="kids-grid">
                <div class="inheritor-box">
                    <h5>Barn @(i + 1)</h5>
                    <label>
                        <input type="text" class="nameTxt" @bind="heir.Name" />
                        <label class="PercentageTxt" style="color:black">
                            <label>
                                Arvefordeling: @InheritanceCalc.CalculateForcedInheritancePercentageForKid()% - @InheritanceCalc.CalculateInheritancePercentageForKid()%
                            </label>
                            <br />
                            <label>
                                Arvebeløb: @InheritanceCalc.CalculateForcedInheritanceAmountForKid() - @InheritanceCalc.CalculateInheritanceAmountForKid()
                            </label>
                            
                            @{
                                heir.ForcedInheritancePercentage = InheritanceCalc.CalculateForcedInheritancePercentageForMarried();
                            }
                        </label>
                    </label>
                </div>
            </div>
        }

        <div class="divider"></div>

        @for (int i = 0; i < extraFamily; i++)
        {
            var heir = new Heir();

            <div class="kids-grid">
                <div class="inheritor-box">
                    <h5>Arving @(i + 1)</h5>
                    <label>
                        <input type="text" class="nameTxt" @bind="heir.Name" />
                    </label>
                </div>
            </div>
        }


    </div>

}

@code {
    int extraFamily = 0;

    private void OnKidsAmountChanged(ChangeEventArgs input)
    {
        int newKidsAmount = int.Parse(input.Value.ToString() ?? "0");
        Client.KidsAmount = newKidsAmount;

        HeirRepository.Instance.GenerateHeirs(HeirType.Kid);
    }

    private void OnMarriedChanged(ChangeEventArgs input)
    {
        bool isMarried = (bool)input.Value;
        Client.Married = isMarried;

        if (isMarried)
        {
            HeirRepository.Instance.GenerateHeirs(HeirType.Spouse);
        }

        else if (!isMarried)
        {
            HeirRepository.Instance.DeleteSpouse();
        }
    }

    private void AddClick()
    {
        extraFamily++;
    }
}