@page "/Arvefordeling"
@rendermode InteractiveServer
@inject ChartService ChartService

<link rel="stylesheet" href="Arvefordeling.css" />



<div class="container">
    <div class="inheritance-tree">

        @* Laver kort af ægtefælle, hvis der findes en ægtefælle *@
        @if (Spouse.Name.Length > 0)
        {
            <div class="married-grid">
                <div class="card h-100" style="position: relative; width: 400px;">
                    <div class="card-header bg-black text-white">
                        <h5>@Spouse.Name</h5>
                    </div>
                    <div class="card-body">
                        <label class="PercentageTxt" style="color:black">

                            <label>
                                <u>
                                    Lovpligtige afgrænsninger
                                </u>
                            </label>

                            <label>
                                Arvebeløb: @Spouse.MinInheritanceAmount.ToString("N2") kr - @Spouse.MaxInheritanceAmount.ToString("N2") kr
                            </label>

                            <label>
                                Beløb tildelt: @Spouse.CurrentInheritanceAmount.ToString("N2") kr
                            </label>

                            @if (Spouse.CurrentInheritanceAmount < Spouse.MinInheritanceAmount)
                            {
                                <label style="color:red;">
                                    <u style="font-weight:600">Advarsel</u>: Arvelod er mindre end den legale afgrænsning!
                                </label>
                            }

                            @if (Spouse.CurrentInheritanceAmount > Spouse.MaxInheritanceAmount)
                            {
                                <label style="color:red;">
                                    <u style="font-weight:600">Advarsel</u>: Arvelod er højere end den legale afgrænsning!
                                </label>
                            }
                        </label>
                    </div>
                </div>
            </div>
        }

        @* Laver at kort for hvert barn i listen af arvinger *@
        @foreach (var kid in HeirRepository.Instance.ReturnKids())
        {
            <div class="kids-grid">
                <div class="card h-100" style="position: relative; width: 400px;">
                    <div class="card-header bg-black text-white">
                        <h5>@kid.Name</h5>
                    </div>

                    <div class="card-body">

                        <label>
                            <label class="PercentageTxt" style="color:black">
                                <label>
                                    <u>
                                        Lovpligtige afgrænsninger
                                    </u>
                                </label>

                                <label>
                                    Arvebeløb: @kid.MinInheritanceAmount.ToString("N2") kr - @kid.MaxInheritanceAmount.ToString("N2") kr
                                </label>

                                <label>
                                    Beløb tildelt: @kid.CurrentInheritanceAmount.ToString("N2") kr
                                </label>

                                @if (kid.CurrentInheritanceAmount < kid.MinInheritanceAmount)
                                {
                                    <label style="color:red;">
                                        <u style="font-weight:600">Advarsel</u>: Arvelod er mindre end den legale afgrænsning!
                                    </label>
                                }

                                @if (kid.CurrentInheritanceAmount > kid.MaxInheritanceAmount)
                                {
                                    <label style="color:red;">
                                        <u style="font-weight:600">Advarsel</u>: Arvelod er højere end den legale afgrænsning!
                                    </label>
                                }
                            </label>
                        </label>
                    </div>
                </div>
            </div>
        }

        @* Laver at kort for hver 3. parts arving i listen af arvinger *@
        @foreach (var other in HeirRepository.Instance.ReturnOther())
        {
            <div class="kids-grid">
                <div class="card h-100" style="position: relative; width: 400px;">
                    <div class="card-header bg-black text-white">
                        <h5>@other.Name</h5>
                    </div>

                    <div class="card-body">
                        <label class="PercentageTxt" style="color:black">
                            <label>
                                <u>
                                    Lovpligtige afgrænsninger
                                </u>
                            </label>

                            <label>
                                Arvebeløb: 0 - @OtherAmount.ToString("N2")
                            </label>

                            <label>
                                Beløb tildelt: @other.CurrentInheritanceAmount.ToString("N2")
                            </label>

                            @if (other.CurrentInheritanceAmount > @OtherAmount)
                            {
                                <label style="color:red;">
                                    <u style="font-weight:600">Advarsel</u>: Arvelod er højere end den legale afgrænsning!
                                </label>
                            }


                        </label>
                    </div>
                </div>

            </div>
        }
    </div>





    <div class="chart-div">
        <PieChart @ref="pieChart1" Width="400" />
    </div>

    <div class="chart-div">
        <PieChart @ref="pieChart2" Width="400" />
    </div>


</div>


<div class="table table-striped">
    <table style="border-collapse: collapse; width: 100%; text-align: left;">
        <thead>
            <tr style="background-color: #f2f2f2;">
                <th style="padding: 8px; border: 1px solid #ddd;">Aktiv</th>

                @foreach (var heir in HeirRepository.Instance.Heirs)
                {
                    <th style="padding: 8px; border: 1px solid #ddd;">@heir.Name</th>
                }

                <th>Passiv</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var asset in AssetRepository.Instance.assets)
            {
                <tr>
                    <!-- Display asset name or details -->
                    <td style="padding: 8px; border: 1px solid #ddd;">
                        @{
                            if (asset.AssetType == AssetType.Item || asset.AssetType == AssetType.Stock)
                            {
                                <label>@asset.Name</label>
                            }
                            else if (asset.AssetType == AssetType.Property)
                            {
                                <label>@asset.Location</label>
                            }
                            else if (asset.AssetType == AssetType.Vehicle)
                            {
                                <label>@asset.Brand</label>
                            }
                            else if (asset.AssetType == AssetType.Money)
                            {
                                <label>Likvide midler</label>
                            }
                        }
                    </td>

                    <!-- Generate a column for each heir with calculated values -->
                    @foreach (var heir in HeirRepository.Instance.Heirs)
                    {
                        <td style="padding: 8px; border: 1px solid #ddd;">
                            @{
                                // Find the corresponding row for the current heir
                                var heirRow = asset.HeirRows.FirstOrDefault(row => row.SelectedHeirId == heir.Id);
                                if (heirRow != null)
                                {
                                    double percentage = (double)heirRow.Percentage / 100;
                                    double calculated = asset.Value * percentage;
                                    double percentageAsset = (double)asset.PercentageOwned / 100;
                                    double sum = calculated * percentageAsset;

                                    <label>@sum</label>
                                }
                                else
                                {
                                    <label>-</label> <!-- Display a dash if no value exists -->
                                }
                            }
                        </td>
                    }

                    <td>
                        @{
                            double calcpercentage = (double)asset.PercentageOwned / 100;
                            double debtsum = asset.Debt * calcpercentage;

                            <label>-@debtsum</label>
                    }
                            
                    </td>
                </tr>

                
            }
            <tr style="background-color: #e6e6e6; font-weight: bold;">
                <td style="padding: 8px; border: 1px solid #ddd;">Opgjort bodel</td>

                <!-- Calculate totals for each heir -->
                @foreach (var heir in HeirRepository.Instance.Heirs)
                {
                    <td style="padding: 8px; border: 1px solid #ddd;">
                        <label>@heir.CurrentInheritanceAmount.ToString("N2")</label>
                    </td>
                }

                <!-- Total passive (debt) -->
                <td style="padding: 8px; border: 1px solid #ddd;">

                    <label></label>

                </td>
            </tr>
        </tbody>
    </table>
</div>

@code {
    Heir Spouse = HeirRepository.Instance.Spouse;
    List<Asset> assets = AssetRepository.Instance.assets;
    List<Heir> heirs = HeirRepository.Instance.Heirs;
    double OtherAmount = Client.TotalValue * 0.75;

    private PieChart pieChart1 = default!;
    private PieChart pieChart2 = default!;

    private PieChartOptions pieChartOptions1 = default!;
    private PieChartOptions pieChartOptions2 = default!;

    private ChartData chartData1 = default!;
    private ChartData chartData2 = default!;



    protected override void OnInitialized()
    {
        var labels1 = ChartService.GetDefaultDataLabels(assets);
        var datasets1 = ChartService.GetDefaultDataSets(assets, 1, labels1.Count); // Pass the correct count
        chartData1 = new ChartData { Labels = labels1, Datasets = datasets1 };

        pieChartOptions1 = new();
        pieChartOptions1.Responsive = true;
        pieChartOptions1.Plugins.Title!.Text = "Oversigt over aktiver";
        pieChartOptions1.Plugins.Title!.Font = new ChartFont();
        pieChartOptions1.Plugins.Title.Font.Size = 24;
        pieChartOptions1.Plugins.Title.Display = true;


        var labels2 = ChartService.GetDefaultDataLabelsForHeirs();
        var datasets2 = ChartService.GetDefaultDataSets(heirs, 1, labels2.Count); // Pass the correct count
        chartData2 = new ChartData { Labels = labels2, Datasets = datasets2 };

        pieChartOptions2 = new();
        pieChartOptions2.Responsive = true;
        pieChartOptions2.Plugins.Title!.Text = "Arvefordeling";
        pieChartOptions2.Plugins.Title!.Font = new ChartFont();
        pieChartOptions2.Plugins.Title.Font.Size = 24;
        pieChartOptions2.Plugins.Title.Display = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize the first chart
            await pieChart1.InitializeAsync(chartData1, pieChartOptions1);

            // Initialize the second chart
            await pieChart2.InitializeAsync(chartData2, pieChartOptions2);
        }
        await base.OnAfterRenderAsync(firstRender);
    }


}
}
